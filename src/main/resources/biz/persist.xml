<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.1.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

  <context:annotation-config />
  <context:component-scan base-package="com.dingwang.*" />
	<!-- <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>${jdbc_url}
			</value>
		</property>
		<property name="username">
			<value>${jdbc_user}</value>
		</property>
		<property name="password">
			<value>${jdbc_password}</value>
		</property>
	</bean> -->
	
	<!-- 德鲁伊配置数据连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		 <property name="url" value="${jdbc_url}" />
	     <property name="username" value="${jdbc_user}"/>
	     <property name="password" value="${jdbc_password}" />
	     <property name="maxActive" value="${maxActive}" />
	     <!-- filters：统计监控信息，value是一个string,支持组合配置，如stat,log4j,那么问题来了，如果自定义的filter该如何配置呢，可以通过bean的形式添加 -->
<!-- 	     <property name="filters" value="${filters}" /> -->
	     <property name="proxyFilters">
	     	<list>
	     		<ref bean="stat-filter"/>
	     	</list>
	     </property> 
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath:com/dingwang/mapping/*Mapper.xml"></property>
	</bean>
	
	<tx:advice id="userTxAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="delete*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>
      <tx:method name="insert*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.RuntimeException" />
      <tx:method name="update*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.Exception" />
      
      <tx:method name="find*" propagation="SUPPORTS"/>
      <tx:method name="get*" propagation="SUPPORTS"/>
      <tx:method name="select*" propagation="SUPPORTS"/>
    </tx:attributes>
  </tx:advice>
  
  <aop:config>    
    <aop:pointcut id="pc" expression="execution(public * com.dingwang.service.*.*(..))" /> <!--把事务控制在Service层-->
    <aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />
  </aop:config>
	
	
	<!-- druid监控统计bean 对应上文dataSource中的proxyFilters -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="1000" />
    	<property name="logSlowSql" value="true" />
	</bean>
	
	<bean id="policyDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.dingwang.dao.PolicyDTOMapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	
	<bean id="sqlBean" class="com.dingwang.service.SqlBean" init-method="init"></bean>
</beans>